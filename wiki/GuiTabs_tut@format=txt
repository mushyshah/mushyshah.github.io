This tutorial will help separate all the tabs of our GUI into different '.h' files.[[BR]]
[[BR]]
The new '.h' file that we'll create is the form, that contains the contents  of ONE tab. This '.h' will then be included in the main GUI files that will only have the tabs, and buttons that remain constant (New day, roll dice, etc). The main file basically serves as the 'holder' for the tab contents.[[BR]]
[[BR]]
The way that the importing is made possible, is by including it, creating the tabs, creating instances of the forms that we want to make tabs (stats,abilities, etc), set their parent containers as the tabs, and then making them '->Visible = true'. Inspection of the GUI files (once it's made) will show the code for including external forms in the tabs!

'''1. Create a new UI file, name it appropriately!  [[BR]]
[[Image(Add.png)]] [[BR]]
[[BR]]
2. Click on the form in designer, go to properties and change ''Autoscalemode'' to 'None'  [[BR]]
[[Image(ScaleMode.png)]][[BR]]
[[BR]]
3. Go to properties and change ''Formborderstyle'' to 'None'  [[BR]]
[[Image(FormBorderStyle.png)]][[BR]]
[[BR]]
4. Go to properties and change ''Backcolor'' to 'Window'. Make the frame size larger (enough to fit tab contents)  [[BR]]
[[Image(backcolor.png)]][[BR]]
[[BR]]
5. Add a panel to the form.  [[BR]]
[[Image(panel.2.png)]][[BR]]
[[BR]]
6. Click on little arrow on top right of panel, and 'Dock in Parent Container'  [[BR]]
[[Image(dock.png)]][[BR]]
[[BR]]
7. Go to the form's code, and change the namespace to something appropriate (in this example, should be '' "Stats" '')  [[BR]]
[[Image(ChangeNamespace.png)]][[BR]]
[[BR]]
8. Go to the original form which has your tabs (that you want to extract). Select all the components in the tab (click and drag).[[BR]]
   Copy the components (ctrl+c or right click copy)  [[BR]]
[[Image(save2.png)]][[BR]]
[[BR]]
9. Go back to your new form, and paste! Then align to the top left corner of the form (the way you'd like it to show in the tab).  [[BR]]
[[Image(align.png)]][[BR]]
[[BR]]
10. Save the form! ''' [[BR]]
[[BR]]
You now have the '.h' form for the main GUI to use. You could edit this form at any time, and the main GUI would not need to recompile or recode anything to integrate it!
